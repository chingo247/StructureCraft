CREATE TABLE IF NOT EXISTS `STRUCTURECRAFT`.`STRUCTURE_TREE` (
    ID BIGINT UNIQUE,
    ST_DEPTH INT DEFAULT 0,
    ROOT_ID BIGINT NOT NULL,
    PARENT_ID BIGINT,
    FOREIGN KEY (`ROOT_ID`) REFERENCES `STRUCTURECRAFT`.`STRUCTURE_TREE` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`PARENT_ID`) REFERENCES `STRUCTURECRAFT`.`STRUCTURE_TREE` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS `STRUCTURECRAFT`.`STRUCTURES` (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,    
    STRUCTURE_STATUS INT DEFAULT 0,
    NAME VARCHAR(255),
    REFUND_VALUE DOUBLE,
    COMPLETED_AT TIMESTAMP,
    CREATED_AT TIMESTAMP,
    DELETED_AT TIMESTAMP,
    SPATIAL_ID BIGINT,
    PARENT_ID BIGINT,
    TREE_ID BIGINT,
    FOREIGN KEY (`TREE_ID`) REFERENCES `STRUCTURECRAFT`.`STRUCTURE_TREE` (`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`PARENT_ID`) REFERENCES `STRUCTURECRAFT`.`STRUCTURES` (`ID`) ON DELETE CASCADE,
    FOREIGN KEY (`SPATIAL_ID`) REFERENCES `STRUCTURECRAFT`.`SPATIALS` (`ID`) ON DELETE CASCADE
);

CREATE TABLE `STRUCTURECRAFT`.`SETTLERS` ( 
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    UUID VARCHAR(36) UNIQUE NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    IS_PLAYER BOOLEAN DEFAULT TRUE
);

CREATE TABLE `STRUCTURECRAFT`.`STRUCTURE_OWNERSHIPS` (
    ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    STRUCTURE_ID BIGINT NOT NULL,
    SETTLER_ID BIGINT  NOT NULL,
    OWNER_TYPE TINYINT  NOT NULL,
    FOREIGN KEY (`STRUCTURE_ID`) REFERENCES `STRUCTURECRAFT`.`STRUCTURES` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`SETTLER_ID`) REFERENCES `STRUCTURECRAFT`.`SETTLERS` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);
ALTER TABLE `STRUCTURECRAFT`.`STRUCTURE_OWNERSHIPS` ADD UNIQUE `unique_ownership`(`STRUCTURE_ID`, `SETTLER_ID`);

CREATE TABLE `STRUCTURECRAFT`.`SCHEMATICS` (
    HASH_VALUE BIGINT PRIMARY KEY,
    DESCRIPTIVE_TITLE VARCHAR(100),
    BLOCKS_WIDTH INT NOT NULL,
    BLOCKS_HEIGHT INT NOT NULL,
    BLOCKS_LENGTH INT NOT NULL,
    NR_OF_BLOCKS INT DEFAULT -1
);
-- 
-- CREATE TABLE  `STRUCTURECRAFT`.`STRUCTURE_SCHEMATICS` (
--     STRUCTURE_ID BIGINT PRIMARY KEY,
--     SCHEMATIC_HASH BIGINT,
--     FOREIGN KEY (`STRUCTURE_ID`) REFERENCES `STRUCTURECRAFT`.`STRUCTURES` (`ID`) ON DELETE CASCADE,
--     FOREIGN KEY (`SCHEMATIC_HASH`) REFERENCES `STRUCTURECRAFT`.`STRUCTURES` (`HASH_VALUE`) ON DELETE CASCADE
-- );
